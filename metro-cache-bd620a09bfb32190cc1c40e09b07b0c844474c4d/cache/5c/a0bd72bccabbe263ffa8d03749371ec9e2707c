__d(function (global, require, module, exports, _dependencyMap) {
  Object.defineProperty(exports, "__esModule", {
    value: true
  });

  var _react2 = require(_dependencyMap[0], "react");

  var _react3 = _interopRequireDefault(_react2);

  var _index = require(_dependencyMap[1], "./../../node_modules/react-transform-hmr/lib/index.js");

  var _index2 = _interopRequireDefault(_index);

  var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

  var _class,
      _temp,
      _jsxFileName = "/Users/Papi/Documents/dev/React Native/codification/components/app/RoomList.js";

  var _reactNative = require(_dependencyMap[2], "react-native");

  var _axios = require(_dependencyMap[3], "axios");

  var _axios2 = _interopRequireDefault(_axios);

  var _Row = require(_dependencyMap[4], "../room/Row");

  var _Row2 = _interopRequireDefault(_Row);

  var _Style = require(_dependencyMap[5], "../../Style");

  var _Style2 = _interopRequireDefault(_Style);

  var _reactNavigation = require(_dependencyMap[6], "react-navigation");

  function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

  var _components = {
    RoomList: {
      displayName: "RoomList"
    }
  };

  var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
    filename: "/Users/Papi/Documents/dev/React Native/codification/components/app/RoomList.js",
    components: _components,
    locals: [module],
    imports: [_react3.default]
  });

  function _wrapComponent(id) {
    return function (Component) {
      return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
    };
  }

  var exampleUser = {
    id: "5a71c57b88b3320014267604"
  };
  var baseURL = "http://codificationesp.herokuapp.com/api/";

  var RoomList = _wrapComponent("RoomList")((_temp = _class = function (_React$Component) {
    _inherits(RoomList, _React$Component);

    function RoomList(props) {
      _classCallCheck(this, RoomList);

      var _this = _possibleConstructorReturn(this, (RoomList.__proto__ || Object.getPrototypeOf(RoomList)).call(this, props));

      _this.state = {
        buildings: []
      };

      _this.getBuildings();

      return _this;
    }

    _createClass(RoomList, [{
      key: "getBuildings",
      value: function getBuildings() {
        var _this2 = this;

        return _axios2.default.get(baseURL + "Accounts/" + exampleUser.id + "/batiments_Accesibles").then(function (response) {
          _this2.setState({
            buildings: response.data
          });
        }).catch(function (error) {
          return error;
        });
      }
    }, {
      key: "render",
      value: function render() {
        var ds = new _reactNative.ListView.DataSource({
          rowHasChanged: function rowHasChanged(r1, r2) {
            return r1 !== r2;
          }
        });

        if (this.state.buildings.length > 0) {
          return _react3.default.createElement(_reactNative.ListView, {
            enableEmptySections: true,
            dataSource: ds.cloneWithRows(this.state.buildings),
            renderRow: function renderRow(row, k) {
              return _react3.default.createElement(_Row2.default, {
                floor: row,
                index: parseInt(k, 10),
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 49
                }
              });
            },
            __source: {
              fileName: _jsxFileName,
              lineNumber: 45
            }
          });
        } else {
          return _react3.default.createElement(_reactNative.ActivityIndicator, {
            color: _Style2.default.color,
            size: "large",
            __source: {
              fileName: _jsxFileName,
              lineNumber: 54
            }
          });
        }
      }
    }]);

    return RoomList;
  }(_react3.default.Component), _class.navigationOptions = {
    title: "Chambres disponibles",
    tabBarIcon: function tabBarIcon() {
      return _react3.default.createElement(_reactNative.Image, {
        source: require(_dependencyMap[7], "./icons/home.png"),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 25
        }
      });
    }
  }, _temp));

  var navigationOptions = {
    headerStyle: _Style2.default.header,
    headerTitleStyle: _Style2.default.headerTitle
  };
  exports.default = (0, _reactNavigation.StackNavigator)({
    RoomList: {
      screen: RoomList,
      navigationOptions: navigationOptions
    },
    Confirm: {
      screen: RoomList,
      navigationOptions: navigationOptions
    }
  });
});